import time
from xbox360controller import Xbox360Controller
from api import RobotAPI
import sys
import math
import signal
import runpy
import socket

  
speed = 1
acceleration = 0.9

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–±–æ—Ç–∞
addr = "localhost"
if len(sys.argv) > 1:
    addr = sys.argv[1]

try:
    rr = RobotAPI(ip=addr)
    rr.init_robot()
    rr.hold()
    rr.await_motion()
    print("–†–æ–±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é")
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–æ–±–æ—Ç–∞: {e}")


# def free_port(api) -> None:
#     """
#     –û—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –ø–æ—Ä—Ç, *–Ω–µ –æ—Ç–∫–ª—é—á–∞—è* –ø–∏—Ç–∞–Ω–∏–µ —Ä–æ–±–æ—Ç–∞:
#     ‚Ä¢ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–≤—ë–º —Ç–µ–∫—É—â–∏–π TCP-—Å–µ–∞–Ω—Å;
#     ‚Ä¢ –æ–±–Ω—É–ª—è–µ–º —Å—Å—ã–ª–∫—É api.socket, —á—Ç–æ–±—ã RobotAPI —Å–æ–∑–¥–∞–ª
#         –Ω–æ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º _connect().
#     """
#     if api.socket:
#         try:
#             print("–û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è ‚Ä¶")
#             api.socket.shutdown(socket.SHUT_RDWR)
#         except Exception:
#             pass
#         try:
#             api.socket.close()
#         finally:
#             api.socket = None  # –≤–∞–∂–Ω–æ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏

def controller_handler(rr):
    def getActPose_deg(rr):
        act_q = list(rr.ctrl.data["act_q"])
        for i in range(6):
            act_q[i] = math.degrees(act_q[i])
        return act_q

    # # –ü–ï–†–í–û–ï –ó–í–ï–ù–û
    # def on_button_pressed_A(button):
    #     act_q = getActPose_deg(rr)  
    #     print(f'–ü–µ—Ä–≤–æ–µ –∑–≤–µ–Ω–æ: {act_q[0]}')

    # # –í–¢–û–†–û–ï –ó–í–ï–ù–û
    # def on_button_pressed_B(button):
    #     act_q = getActPose_deg(rr)  
    #     print(f'–í—Ç–æ—Ä–æ–µ –∑–≤–µ–Ω–æ: {act_q[1]}')

# –ü–ï–†–í–û–ï –ó–í–ï–ù–û
    def on_button_pressed_X(button): # —Ñ—É–Ω–∫—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –• –∏–∑ —Ñ–∞–π–ª–∞ test_1 
        with Xbox360Controller() as controller:
            controller.set_rumble(1, 0, 1000)
    
            on_button_X() # —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—É—é –º—ã –≤–ø–∏—Å–∞–ª–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é –∫–Ω–æ–ø–∫–∏, —Ç–æ –µ—Å—Ç—å –ø–æ —Ñ–∞–∫—Ç—É –ø–æ–ª—É—á–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏,
            # —Ç–æ –µ—Å—Ç—å –º—ã –±—É–¥–µ–º –±—Ä–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ test_1 –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∏—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤ try
            # –ö–û–ú–ê–ù–î–´ –î–õ–Ø –†–û–ë–û–¢–ê –°–ú–û–¢–†–ï–¢–¨ –í n1
    
    def on_button_X():
        act_q = getActPose_deg(rr)
                  # —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç —Ç–æ—á–∫—É –≤ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–µ—Ä–º–µ—Å—Ç–∏—Ç—å—Å—è (–¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–≤–µ–Ω–∞)
        rr.add_wp(des_q=[math.radians(act_q[0]+10), math.radians(act_q[1]), math.radians(act_q[2]), math.radians(act_q[3]), math.radians(act_q[4]), math.radians(act_q[5])], vmax_j=speed, amax_j=acceleration, rblend=0.7) # –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        rr.run_wps() #–¥–≤–∏–∂–µ–Ω–∏–µ
        rr.await_motion()
        print(f'–ü–µ—Ä–≤–æ–µ –∑–≤–µ–Ω–æ –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª–æ—Å—å: {act_q[0]}')

# –í–¢–û–†–û–ï –ó–í–ï–ù–û
    def on_button_pressed_Y(button): 
        with Xbox360Controller() as controller:
    
            on_button_Y()
        
    def on_button_Y():
        act_q = getActPose_deg(rr)
        rr.add_wp(des_q=[math.radians(act_q[0]), math.radians(act_q[1]+10), math.radians(act_q[2]), math.radians(act_q[3]), math.radians(act_q[4]), math.radians(act_q[5])], vmax_j=speed, amax_j=acceleration, rblend=0.7) # –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        rr.run_wps() #–¥–≤–∏–∂–µ–Ω–∏–µ
        rr.await_motion()
        print(f'–í—Ç–æ—Ä–æ–µ –∑–≤–µ–Ω–æ –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª–æ—Å—å: {act_q[1]}')

# –¢–†–ï–¢–¨–ï –ó–í–ï–ù–û
    def on_button_pressed_B(button): 
        with Xbox360Controller() as controller:
    
            on_button_B()
        
    def on_button_B():
        act_q = getActPose_deg(rr)
        rr.add_wp(des_q=[math.radians(act_q[0]), math.radians(act_q[1]), math.radians(act_q[2]+10), math.radians(act_q[3]), math.radians(act_q[4]), math.radians(act_q[5])], vmax_j=speed, amax_j=acceleration, rblend=0.7) # –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        rr.run_wps() #–¥–≤–∏–∂–µ–Ω–∏–µ
        rr.await_motion()
        print(f'–¢—Ä–µ—Ç—å–µ –∑–≤–µ–Ω–æ –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª–æ—Å—å: {act_q[2]}')

# –ß–ï–¢–í–ï–†–¢–û–ï –ó–í–ï–ù–û
    def on_button_pressed_A(button): 
        with Xbox360Controller() as controller:
    
            on_button_A() 
        
    def on_button_A():
        act_q = getActPose_deg(rr)
        rr.add_wp(des_q=[math.radians(act_q[0]), math.radians(act_q[1]), math.radians(act_q[2]), math.radians(act_q[3]+10), math.radians(act_q[4]), math.radians(act_q[5])], vmax_j=speed, amax_j=acceleration, rblend=0.7) # –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        rr.run_wps() #–¥–≤–∏–∂–µ–Ω–∏–µ
        rr.await_motion()
        print(f'–ß–µ—Ç–≤–µ—Ä—Ç–æ–µ –∑–≤–µ–Ω–æ –ø—Ä–µ–º–µ—Å—Ç–∏–ª–æ—Å—å: {act_q[3]}')

# –ü–Ø–¢–û–ï –ó–í–ï–ù–û
    def on_lb_pressed(button): 
        with Xbox360Controller() as controller:
    
            on_left_bumper() 
        
    def on_left_bumper():
        act_q = getActPose_deg(rr)
        rr.add_wp(des_q=[math.radians(act_q[0]), math.radians(act_q[1]), math.radians(act_q[2]), math.radians(act_q[3]), math.radians(act_q[4]+10), math.radians(act_q[5])], vmax_j=speed, amax_j=acceleration, rblend=0.7) # –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        rr.run_wps() #–¥–≤–∏–∂–µ–Ω–∏–µ
        rr.await_motion()
        print(f'–ü—è—Ç–æ–µ –∑–≤–µ–Ω–æ –ø—Ä–µ–º–µ—Å—Ç–∏–ª–æ—Å—å: {act_q[4]}')

# –®–ï–°–¢–û–ï –ó–í–ï–ù–û
    def on_rb_pressed(button): 
        with Xbox360Controller() as controller:
    
            on_right_bumper() 
        
    def on_right_bumper():
        act_q = getActPose_deg(rr)
        rr.add_wp(des_q=[math.radians(act_q[0]), math.radians(act_q[1]), math.radians(act_q[2]), math.radians(act_q[3]), math.radians(act_q[4]), math.radians(act_q[5]+10)], vmax_j=speed, amax_j=acceleration, rblend=0.7) # –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        rr.run_wps() #–¥–≤–∏–∂–µ–Ω–∏–µ
        rr.await_motion()
        print(f'–®–µ—Å—Ç–æ–µ –∑–≤–µ–Ω–æ –ø—Ä–µ–º–µ—Å—Ç–∏–ª–æ—Å—å: {act_q[5]}')

# –û–¢–ö–†–´–¢–ò–ï –ò –ó–ê–ö–†–´–¢–ò–ï –°–•–í–ê–¢–ê

    # def on_lt_moved(trigger): 
    #     with Xbox360Controller() as controller:
    #         print(trigger.value)
    #         if trigger.value > 0.5:
    #             rr.write_dig_output(8, 1)
    #             print('–û—Ç–∫—Ä—ã—Ç–∏–µ: –≤—ã—Ö–æ–¥ –≤–∫–ª')
    #         else:
    #             rr.write_dig_output(8, 0)
    #             print('–û—Ç–∫—Ä—ã—Ç–∏–µ: –≤—ã—Ö–æ–¥ –≤—ã–∫–ª')
                
    # def on_rt_moved(trigger): 
    #     with Xbox360Controller() as controller:
    #         if trigger.value > 0.5:
    #             rr.write_dig_output(9, 1)
    #             print('–ó–∞–∫—Ä—ã—Ç–∏–µ: –≤—ã—Ö–æ–¥ –≤–∫–ª')
    #         else:
    #             rr.write_dig_output(9, 0)
    #             print('–ó–∞–∫—Ä—ã—Ç–∏–µ: –≤—ã—Ö–æ–¥ –≤—ã–∫–ª')

    # –í–ö–õ–Æ–ß–ï–ù–ò–ï ZERO GRAVITY
    # def set_io_func(self, hold_in, zg_in):

    #     if hold_in[1]:
    #         hold_in[0] |= 0x80000000
    #     if zg_in[1]:
    #         zg_in[0] |= 0x80000000

    #     self._cmd(CTRLR_COMS_SET_IO_FUNC, struct.pack("2I", hold_in[0], zg_in[0]))

    def on_lt_moved(trigger):
        with Xbox360Controller() as controller:
            if trigger.value > 0.5:
                rr.zg(1)
                print('–õ–æ–≤–∏ –º–µ–Ω—è')
            else:
            #rr.zg(0)
                print('–¥–µ—Ä–∂—É—Å—å')
        #print(f'–õ–æ–≤–∏ –º–µ–Ω—è')


    # –í–ö–õ–Æ–ß–ï–ù–ò–ï –ò –í–´–ö–õ–Æ–ß–ï–ù–ò–ï –†–û–ë–û–¢–ê 
    def on_start_pressed(button):
        with Xbox360Controller() as controller:
            on_button_start()
        
    def on_button_start():
        rr.run()
        print(f'–†–æ–±–æ—Ç –ø—Ä–æ—Å–Ω—É–ª—Å—è')


    def on_back_pressed (button):
        with Xbox360Controller() as controller:
           on_button_back()     

    def on_button_back():
        rr.off()
        print(f'–†–æ–±–æ—Ç —É—Å–Ω—É–ª')

    try:
        with Xbox360Controller(0, axis_threshold=0.2) as controller:
            print(f"üéÆ –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä '{controller.name}' –ø–æ–¥–∫–ª—é—á–µ–Ω")
            print("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É A –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è")
            print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞\n")

            # –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫
            controller.button_a.when_pressed = on_button_pressed_A
            controller.button_b.when_pressed = on_button_pressed_B
            controller.button_x.when_pressed = on_button_pressed_X
            controller.button_y.when_pressed = on_button_pressed_Y
            controller.button_trigger_l.when_pressed = on_lb_pressed
            controller.button_trigger_r.when_pressed = on_rb_pressed

             # –¢—Ä–∏–≥–≥–µ—Ä—ã
            controller.trigger_l.when_moved = on_lt_moved
            # controller.trigger_r.when_moved = on_rt_moved

            # –ö–Ω–æ–ø–∫–∞ start
            controller.button_start.when_pressed = on_start_pressed
            controller.button_select.when_pressed = on_back_pressed
            #controller.button_mode.when_pressed = on_xbox_pressed

            signal.pause()

    except KeyboardInterrupt:
        print("\n–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞")

            

    except KeyboardInterrupt:
        print("\n–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞: {e}")
    finally:
        
        print("–î–æ–±–±–∏ —Å–≤–æ–±–æ–¥–µ–Ω")

if __name__ == "__main__":
    controller_handler(rr)